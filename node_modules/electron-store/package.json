{
  "_args": [
    [
      {
        "raw": "electron-store",
        "scope": null,
        "escapedName": "electron-store",
        "name": "electron-store",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/prepress/Desktop/RD/simone"
    ]
  ],
  "_from": "electron-store@latest",
  "_id": "electron-store@1.1.0",
  "_inCache": true,
  "_location": "/electron-store",
  "_nodeVersion": "4.8.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/electron-store-1.1.0.tgz_1496417286931_0.9571349574252963"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "electron-store",
    "scope": null,
    "escapedName": "electron-store",
    "name": "electron-store",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/electron-store/-/electron-store-1.1.0.tgz",
  "_shasum": "3a06fbdc8c64ca14163dea054470f7561a7906aa",
  "_shrinkwrap": null,
  "_spec": "electron-store",
  "_where": "/Users/prepress/Desktop/RD/simone",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/electron-store/issues"
  },
  "dependencies": {
    "conf": "^1.0.0"
  },
  "description": "Simple data persistence for your Electron app or module - Save and load user preferences, app state, cache, etc",
  "devDependencies": {
    "ava": "*",
    "electron": "^1.3.3",
    "execa": "^0.6.3",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "3a06fbdc8c64ca14163dea054470f7561a7906aa",
    "tarball": "https://registry.npmjs.org/electron-store/-/electron-store-1.1.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "399a85e881630e465b428eaed221792790d7ec9f",
  "homepage": "https://github.com/sindresorhus/electron-store#readme",
  "keywords": [
    "electron",
    "store",
    "app",
    "config",
    "storage",
    "conf",
    "configuration",
    "settings",
    "preferences",
    "json",
    "data",
    "persist",
    "persistent",
    "save"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "electron-store",
  "optionalDependencies": {},
  "readme": "# electron-store [![Build Status: Linux and macOS](https://travis-ci.org/sindresorhus/electron-store.svg?branch=master)](https://travis-ci.org/sindresorhus/electron-store) [![Build status: Windows](https://ci.appveyor.com/api/projects/status/m2m9o6gq77xxi2eg/branch/master?svg=true)](https://ci.appveyor.com/project/sindresorhus/electron-store/branch/master)\n\n> Simple data persistence for your [Electron](https://electron.atom.io) app or module - Save and load user preferences, app state, cache, etc\n\nElectron doesn't have a built-in way to persist user preferences and other data. This module handles that for you, so you can focus on building your app. The data is saved in a JSON file in [`app.getPath('userData')`](http://electron.atom.io/docs/api/app/#appgetpathname).\n\nYou can use this module directly in both the main and renderer process.\n\n*[This project was recently renamed from `electron-config`.](https://github.com/sindresorhus/electron-store/issues/4)*\n\n\n## Install\n\n```\n$ npm install electron-store\n```\n\n\n## Usage\n\n```js\nconst Store = require('electron-store');\nconst store = new Store();\n\nstore.set('unicorn', 'ðŸ¦„');\nconsole.log(store.get('unicorn'));\n//=> 'ðŸ¦„'\n\n// Use dot-notation to access nested properties\nstore.set('foo.bar', true);\nconsole.log(store.get('foo'));\n//=> {bar: true}\n\nstore.delete('unicorn');\nconsole.log(store.get('unicorn'));\n//=> undefined\n```\n\n\n## API\n\n### Store([options])\n\nReturns a new instance.\n\n### options\n\n#### defaults\n\nType: `Object`\n\nDefault data.\n\n#### name\n\nType: `string`<br>\nDefault: `config`\n\nName of the storage file (without extension).\n\nThis is useful if you want multiple storage files for your app. Or if you're making a reusable Electron module that persists some data, in which case you should **not** use the name `config`.\n\n#### cwd\n\nType: `string`<br>\nDefault: [`app.getPath('userData')`](http://electron.atom.io/docs/api/app/#appgetpathname)\n\nStorage file location. *Don't specify this unless absolutely necessary!*\n\nIf a relative path, it's relative to the default cwd. For example, `{cwd: 'unicorn'}` would result in a storage file in `~/Library/Application Support/App Name/unicorn`.\n\n### Instance\n\nYou can use [dot-notation](https://github.com/sindresorhus/dot-prop) in a `key` to access nested properties.\n\nThe instance is [`iterable`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Iteration_protocols) so you can use it directly in a [`forâ€¦of`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of) loop.\n\n#### .set(key, value)\n\nSet an item.\n\n#### .set(object)\n\nSet multiple items at once.\n\n#### .get(key, [defaultValue])\n\nGet an item or `defaultValue` if the item does not exist.\n\n#### .has(key)\n\nCheck if an item exists.\n\n#### .delete(key)\n\nDelete an item.\n\n#### .clear()\n\nDelete all items.\n\n#### .size\n\nGet the item count.\n\n#### .store\n\nGet all the data as an object or replace the current data with an object:\n\n```js\nconf.store = {\n\thello: 'world'\n};\n```\n\n#### .path\n\nGet the path to the storage file.\n\n\n## Related\n\n- [electron-debug](https://github.com/sindresorhus/electron-debug) - Adds useful debug features to your Electron app\n- [electron-context-menu](https://github.com/sindresorhus/electron-context-menu) - Context menu for your Electron app\n- [electron-dl](https://github.com/sindresorhus/electron-dl) - Simplified file downloads for your Electron app\n- [electron-unhandled](https://github.com/sindresorhus/electron-unhandled) - Catch unhandled errors and promise rejections in your Electron app\n- [conf](https://github.com/sindresorhus/conf) - Simple config handling for your app or module\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/electron-store.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "1.1.0",
  "xo": {
    "envs": [
      "node",
      "browser"
    ]
  }
}
