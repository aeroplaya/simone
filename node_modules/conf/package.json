{
  "_args": [
    [
      {
        "raw": "conf@^1.0.0",
        "scope": null,
        "escapedName": "conf",
        "name": "conf",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/prepress/Desktop/RD/simone/node_modules/electron-store"
    ]
  ],
  "_from": "conf@>=1.0.0 <2.0.0",
  "_id": "conf@1.1.1",
  "_inCache": true,
  "_location": "/conf",
  "_nodeVersion": "4.8.3",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/conf-1.1.1.tgz_1494605251434_0.893836761591956"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "conf@^1.0.0",
    "scope": null,
    "escapedName": "conf",
    "name": "conf",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/electron-store"
  ],
  "_resolved": "https://registry.npmjs.org/conf/-/conf-1.1.1.tgz",
  "_shasum": "238d0a3090ac4916ed2d40c7e81d7a11667bc7ba",
  "_shrinkwrap": null,
  "_spec": "conf@^1.0.0",
  "_where": "/Users/prepress/Desktop/RD/simone/node_modules/electron-store",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/conf/issues"
  },
  "dependencies": {
    "dot-prop": "^4.1.0",
    "env-paths": "^1.0.0",
    "make-dir": "^1.0.0",
    "pkg-up": "^2.0.0"
  },
  "description": "Simple config handling for your app or module",
  "devDependencies": {
    "ava": "*",
    "clear-require": "^2.0.0",
    "del": "^2.2.1",
    "tempy": "^0.1.0",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "238d0a3090ac4916ed2d40c7e81d7a11667bc7ba",
    "tarball": "https://registry.npmjs.org/conf/-/conf-1.1.1.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "6036afce76b736a65075c715126e0d0d57411c8b",
  "homepage": "https://github.com/sindresorhus/conf#readme",
  "keywords": [
    "config",
    "store",
    "app",
    "storage",
    "conf",
    "configuration",
    "settings",
    "preferences",
    "json",
    "data",
    "persist",
    "persistent",
    "save",
    "load",
    "read",
    "write",
    "cache"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "conf",
  "optionalDependencies": {},
  "readme": "# conf [![Build Status: Linux and macOS](https://travis-ci.org/sindresorhus/conf.svg?branch=master)](https://travis-ci.org/sindresorhus/conf) [![Build status: Windows](https://ci.appveyor.com/api/projects/status/n88jwh3aju39i0p2/branch/master?svg=true)](https://ci.appveyor.com/project/sindresorhus/conf/branch/master)\n\n> Simple config handling for your app or module\n\nAll you have to care about is what to persist. This module will handle all the dull details like where and how.\n\n\n## Install\n\n```\n$ npm install --save conf\n```\n\n\n## Usage\n\n```js\nconst Conf = require('conf');\nconst config = new Conf();\n\nconfig.set('unicorn', 'ðŸ¦„');\nconsole.log(config.get('unicorn'));\n//=> 'ðŸ¦„'\n\n// Use dot-notation to access nested properties\nconfig.set('foo.bar', true);\nconsole.log(config.get('foo'));\n//=> {bar: true}\n\nconfig.delete('unicorn');\nconsole.log(config.get('unicorn'));\n//=> undefined\n```\n\nOr [create a subclass](https://github.com/sindresorhus/electron-config/blob/master/index.js).\n\n\n## API\n\n### Conf([options])\n\nReturns a new instance.\n\n### options\n\n#### defaults\n\nType: `Object`\n\nDefault config.\n\n#### configName\n\nType: `string`<br>\nDefault: `config`\n\nName of the config file (without extension).\n\nUseful if you need multiple config files for your app or module. For example, different config files between two major versions.\n\n#### projectName\n\nType: `string`<br>\nDefault: The `name` field in the package.json closest to where `conf` is imported.\n\nYou only need to specify this if you don't have a package.json file in your project.\n\n#### cwd\n\nType: `string`<br>\nDefault: System default [user config directory](https://github.com/sindresorhus/env-paths#pathsconfig)\n\n**You most likely don't need this. Please don't use it unless you really have to.**\n\nOverrides `projectName`.\n\nThe only use-case I can think of is having the config located in the app directory or on some external storage.\n\n### Instance\n\nYou can use [dot-notation](https://github.com/sindresorhus/dot-prop) in a `key` to access nested properties.\n\nThe instance is [`iterable`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Iteration_protocols) so you can use it directly in a [`forâ€¦of`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of) loop.\n\n#### .set(key, value)\n\nSet an item.\n\n#### .set(object)\n\nSet multiple items at once.\n\n#### .get(key, [defaultValue])\n\nGet an item or `defaultValue` if the item does not exist.\n\n#### .has(key)\n\nCheck if an item exists.\n\n#### .delete(key)\n\nDelete an item.\n\n#### .clear()\n\nDelete all items.\n\n#### .size\n\nGet the item count.\n\n#### .store\n\nGet all the config as an object or replace the current config with an object:\n\n```js\nconf.store = {\n\thello: 'world'\n};\n```\n\n#### .path\n\nGet the path to the config file.\n\n\n\n## FAQ\n\n### How is this different from [`configstore`](https://github.com/yeoman/configstore)?\n\nI'm also the author of `configstore`. While it's pretty good, I did make some mistakes early on that are hard to change at this point. This module is the result of everything I learned from making `configstore`. Mainly where config is stored. In `configstore`, the config is stored in `~/.config` (which is mainly a Linux convention) on all systems, while `conf` stores config in the system default [user config directory](https://github.com/sindresorhus/env-paths#pathsconfig). The `~/.config` directory, it turns out, often have an incorrect permission on macOS and Windows, which has caused a lot of grief for users.\n\n\n## Related\n\n- [electron-config](https://github.com/sindresorhus/electron-config) - Simple config handling for your Electron app or module\n- [cache-conf](https://github.com/SamVerschueren/cache-conf) - Simple cache config handling for your app or module\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/conf.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "1.1.1"
}
